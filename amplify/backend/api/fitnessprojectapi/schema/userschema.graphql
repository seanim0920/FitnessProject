type Location {
  latitude: Float
  longitude: Float
}

input LocationInput {
  latitude: Float
  longitude: Float
}

type User @model @auth(rules: [{allow: private, operations: [read]}, {allow: owner, ownerField: "id"}, {allow: private, provider: iam, operations: [read]}, {allow: groups, groups: ["Admins"], operations: [read, update, delete]}]) {
  id: ID!
  identityId: ID
  name: String!
  age: Int
  gender: String
  bio: String
  goals: String
  location: Location
  status: String
  deviceToken: ID
  friendRequestPrivacy: Int
  messagesPrivacy: Int
  isVerified: Boolean @auth(rules: [{allow: private, operations: [read]}, {allow: private, provider: iam, operations: [read, create, update, delete]}, {allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}])
  ##event: Event @belongsTo
}

input CreateUserInput {
  identityId: ID
  name: String!
  age: Int
  gender: String
  bio: String
  goals: String
  location: LocationInput
  status: String
  deviceToken: ID
}

input UpdateUserInput {
  name: String
  age: Int
  gender: String
  bio: String
  goals: String
  location: LocationInput
  status: String
  deviceToken: ID
  friendRequestPrivacy: Int
  messagesPrivacy: Int
  isVerified: Boolean
}

input verifyUserInput {
  id: ID!
  title: String!
}
