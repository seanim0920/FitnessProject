type Mutation {
  batchDeletePosts(posts: [DeletePostInput]): [Post] @aws_iam
  incrementLikes(input: incrementLikesInput!): Post @aws_iam
  decrementLikes(input: incrementLikesInput!): Post @aws_iam
  incrementReplies(input: incrementLikesInput!): Post @aws_iam
  decrementReplies(input: incrementLikesInput!): Post @aws_iam
}

type Subscription {
  onCreatePostFromChannel(channel: ID!): Post @aws_subscribe(mutations: ["createPost"]) 
  onCreatePostForReceiver(receiver: ID!): Post @aws_subscribe(mutations: ["createPost"]) 
  onCreatePostByUser(userId: ID!): Post @aws_subscribe(mutations: ["createPost"]) 
  onUpdatePostFromChannel(channel: ID!): Post @aws_subscribe(mutations: ["updatePost"]) 
  onDeletePostFromChannel(channel: ID!): Post @aws_subscribe(mutations: ["deletePost"]) 

  onIncrementLikes: Post @aws_subscribe(mutations: ["incrementLikes"]) 
  onDecrementLikes: Post @aws_subscribe(mutations: ["decrementLikes"])
  onIncrementReplies: Post @aws_subscribe(mutations: ["incrementReplies"]) 
  onDecrementReplies: Post @aws_subscribe(mutations: ["decrementReplies"])

  onAcceptedFriendship: Friendship @aws_subscribe(mutations: ["updateFriendship"])
  onCreateFriendRequestForReceiver(receiver: ID!): Friendship @aws_subscribe(mutations: ["createFriendship"])

  onCreateOrUpdateConversation(users: [ID!]!): Conversation @aws_subscribe(mutations: ["createConversation", "updateConversation"])
  onDeleteConversation(users: [ID!]!): Conversation @aws_subscribe(mutations: ["deleteConversation"])
}

type Query {
  batchGetLikes(likes: [CreateLikeInput]): [Like]
  batchGetConversations(ids: [DeleteConversationInput]): [Conversation]
}