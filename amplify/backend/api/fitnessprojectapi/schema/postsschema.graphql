"""
This data type is used on the feed screen, group screen and message screen.
The "postsByChannel" query is used to find posts belonging to a specific group or directed to a specific user.
The "postsByParentId" query is used to find replies belonging to a specific post.
"""
type Post @model(timestamps: { createdAt: "createdAt", updatedAt: "updatedAt" })
@auth(
  rules: [
      { allow: private, operations: [read] },
      { allow: owner, ownerField: "userId" },
      { allow: owner, ownerField: "receiver", operations: [delete, read] },
      { allow: private, provider: iam, operations: [read, delete] },
  ]
)
@key(name: "ByChannel", fields: ["channel", "parentId", "isParent", "createdAt"], queryField: "postsByChannel")
@key(name: "ByParentId", fields: ["parentId", "isParent"], queryField: "postsByParentId")
{
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  id: ID!
  userId: ID!
  description: String
  parentId: String
  channel: ID
  receiver: ID
  isParent: Int
}

"""
This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when creating a new message.
"""
input CreatePostInput {
  description: String
  parentId: String
  channel: ID
  receiver: ID
  isParent: Int
}

"""
This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when updating a message.
"""
input UpdatePostInput {
  createdAt: AWSDateTime!
  description: String
  parentId: String
  isParent: Int
}

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""
(not working) This is used for batch deletion of posts.
"""
input DeletePostInput {
  createdAt: AWSDateTime!
  userId: String!
}

type Mutation {
  batchDeletePosts(posts: [DeletePostInput]): [Post] @aws_iam
}