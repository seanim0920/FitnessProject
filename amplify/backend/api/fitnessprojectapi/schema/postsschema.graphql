"""
This data type is used on the feed screen, group screen and message screen.
The "postsByChannel" query is used to find posts belonging to a specific group or directed to a specific user.
"""
type Post @model(timestamps: { createdAt: "createdAt", updatedAt: "updatedAt" }, subscriptions: null)
@auth(
  rules: [
      { allow: owner, ownerField: "userId" },
      { allow: owner, ownerField: "receiver", operations: [delete, read] },
      { allow: private, provider: iam, operations: [create, read, update, delete] },
      { allow: groups, groups: ["Admins"], operations: [create, read, update, delete] },
  ]
)
@key(fields: ["createdAt", "userId"])
@key(name: "ByUser", fields: ["userId", "createdAt"], queryField: "postsByUser")
@key(name: "ByReceiver", fields: ["receiver", "createdAt"], queryField: "postsByReceiver")
@key(name: "ByChannel", fields: ["channel", "createdAt"], queryField: "postsByChannel")
@key(name: "ByLikes", fields: ["channel", "likes"], queryField: "postsByLikes")
{
  likes: Int
    @auth(
      rules: [
          { allow: private, operations: [read] },
          { allow: private, provider: iam, operations: [read, create, update] },
      ]
    )
  replies: Int
    @auth(
      rules: [
          { allow: private, operations: [read] },
          { allow: private, provider: iam, operations: [read, create, update] },
      ]
    )
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  userId: ID!
  description: String
  channel: ID
  receiver: ID
  parentId: ID
  imageURL: ID
  taggedUsers: [ID!]
}

"""
This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when creating a new message.
"""
input CreatePostInput {
  createdAt: AWSDateTime
  description: String
  channel: ID
  receiver: ID
  parentId: ID
  imageURL: ID
  taggedUsers: [ID!]
}

"""
This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when updating a message.
"""
input UpdatePostInput {
  createdAt: AWSDateTime!
  description: String
  taggedUsers: [ID!]
}

input incrementLikesInput {
  createdAt: AWSDateTime!
  userId: ID!
}

"""
This is used for batch deletion of posts.
"""
input DeletePostInput {
  createdAt: AWSDateTime!
  userId: String!
}