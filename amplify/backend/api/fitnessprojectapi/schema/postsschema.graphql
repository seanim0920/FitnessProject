"""
This data type is used on the feed screen, group screen and message screen.
The "postsByChannel" query is used to find posts belonging to a specific group or directed to a specific user.
"""
type Post @model(timestamps: {createdAt: "createdAt", updatedAt: "updatedAt"}, subscriptions: null) @auth(rules: [{allow: owner, ownerField: "postOwner"}, {allow: owner, ownerField: "receiver", operations: [delete, read]}, {allow: private, provider: iam, operations: [create, read, update, delete]}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}]) {
  likes: Int @auth(rules: [{allow: private, operations: [read]}, {allow: private, provider: iam, operations: [read, create, update]}])
  replies: Int @auth(rules: [{allow: private, operations: [read]}, {allow: private, provider: iam, operations: [read, create, update]}])
  createdAt: AWSDateTime! @primaryKey(sortKeyFields: ["userId"])
  updatedAt: AWSDateTime!
  userId: ID! @index(name: "ByUser", queryField: "postsByUser", sortKeyFields: ["createdAt"])
  postOwner: ID!
  description: String
  channel: ID @index(name: "ByChannel", queryField: "postsByChannel", sortKeyFields: ["createdAt"]) @index(name: "ByLikes", queryField: "postsByLikes", sortKeyFields: ["likes"]) @index(name: "ByUserId", queryField: "postsByUserId", sortKeyFields: ["userId"])
  receiver: ID
  parentId: ID
  imageURL: ID
  taggedUsers: [ID!]
 
}

"""This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when creating a new message."""
input CreatePostInput {
  createdAt: AWSDateTime
  description: String
  channel: ID
  receiver: ID
  parentId: ID
  imageURL: ID
  taggedUsers: [ID!]
}

"""This allows us to fill in the missing fields in the backend rather than letting the user do it. Applies when updating a message."""
input UpdatePostInput {
  createdAt: AWSDateTime!
  description: String
  taggedUsers: [ID!]
}

input incrementLikesInput {
  createdAt: AWSDateTime!
  userId: ID!
}

"""This is used for batch deletion of posts."""
input DeletePostInput {
  createdAt: AWSDateTime!
  userId: String!
}
