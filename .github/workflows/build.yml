name: Project Setup
run-name: Setup Project

env:
  TEST_RUNNER_CI: 1
  NODE_VERSION: "20.0.0"

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_and_lint:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi
        env:
          TIFSHARED_JS: true

      - name: Lint
        run: npm run staged-lint

  unit_tests:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: setup_and_lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Add Env
        run: echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Run tests
        run: npm run test:ci

  build:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Bundle project
        run: npx expo export --platform ios --platform android
