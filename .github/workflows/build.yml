name: Project Setup
run-name: Setup Project

env:
  TEST_RUNNER_CI: 1

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
env:
  EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
  EXPO_PROJECT_OWNER: ${{ secrets.EXPO_PROJECT_OWNER }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: write-all

jobs:
  setup_and_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.0"

      - name: Install Dependencies
        run: |
          if [ -d node_modules ]; then
            echo "Dependencies are cached - skipping installation"
          else
            npm ci
          fi

      - name: Lint
        run: npm run staged-lint

  unit_tests:
    needs: setup_and_lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run tests
        run: npm run test:ci

  build:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundle project
        run: npx expo export

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Append Check Run ID to .env
        run: |
          echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}" >> .env
          echo "EXPO_PROJECT_OWNER=${{ secrets.EXPO_PROJECT_OWNER }}" >> .env
          echo "CHECK_RUN_ID=${{ github.run_id }}" >> .env
          echo "GITHUB_SHA=${{ github.event.pull_request.head.sha }}" >> .env
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> .env
          cat .env

      - name: Trigger Build on EAS
        run: eas build --platform android --non-interactive --no-wait
