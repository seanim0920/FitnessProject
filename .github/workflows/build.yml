name: Project Build

env:
  TEST_RUNNER_CI: 1
  NODE_VERSION: "20.0.0"

on:
  pull_request:
    types: [opened, synchronize]
    branches: [master, development]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_platform_changes:
    runs-on: ubuntu-latest
    outputs:
      ios_changes: ${{ steps.check-files.outputs.ios_changes }}
      android_changes: ${{ steps.check-files.outputs.android_changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Check for platform-specific changes
        id: check-files
        run: |
          git diff --name-only FETCH_HEAD HEAD > changed_files.txt
          
          # iOS native file patterns
          if grep -q -E "\.(swift|m|h|mm|plist|xcodeproj|xcworkspace|pbxproj)$|ios/Podfile|ios/Podfile.lock" changed_files.txt; then
            echo "ios_changes=true" >> $GITHUB_OUTPUT
          else
            echo "ios_changes=false" >> $GITHUB_OUTPUT
          fi
          
          # Android native file patterns
          if grep -q -E "\.(kotlin|kt|java|gradle|xml|aar)$|android/gradle|android/build.gradle|android/settings.gradle" changed_files.txt; then
            echo "android_changes=true" >> $GITHUB_OUTPUT
          else
            echo "android_changes=false" >> $GITHUB_OUTPUT
          fi
          
          # Check package.json for native dependencies
          if git diff FETCH_HEAD HEAD -- package.json | grep -q "dependencies\|devDependencies"; then
            echo "Checking package.json changes..."
            git show FETCH_HEAD:package.json > old_package.json
            git show HEAD:package.json > new_package.json
            
            if ! command -v jq &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y jq
            fi
            
            function check_native_deps() {
              local old_deps=$(jq -r "$1" old_package.json)
              local new_deps=$(jq -r "$1" new_package.json)
              
              if [ "$old_deps" != "$new_deps" ]; then
                local native_patterns="react-native-|@react-native|expo-|@expo"
                if echo "$new_deps" | grep -q "$native_patterns"; then
                  return 0
                fi
              fi
              return 1
            }
            
            if check_native_deps '.dependencies' || check_native_deps '.devDependencies'; then
              echo "ios_changes=true" >> $GITHUB_OUTPUT
              echo "android_changes=true" >> $GITHUB_OUTPUT
            fi
            
            rm old_package.json new_package.json
          fi

  setup_and_lint:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js and Cache
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi
        env:
          TIFSHARED_JS: true

      - name: Lint
        run: npm run staged-lint

  unit_tests:
    needs: setup_and_lint
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Setup Environment
        run: echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Run Tests
        run: npm run test:ci

  build:
    needs: unit_tests
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Bundle Project
        run: npx expo export --platform ios --platform android

  wait_for_review:
    needs: [check_platform_changes]
    if: |
      github.actor != 'roswaaltifbot' && 
      !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') && 
      (needs.check_platform_changes.outputs.ios_changes == 'true' || needs.check_platform_changes.outputs.android_changes == 'true')
    runs-on: ubuntu-latest
    environment:
      name: eas-build
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - run: echo "Waiting for environment review"

  create_build_checkruns:
    needs: [build, check_platform_changes, wait_for_review]
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    outputs:
      ios_checkrun_id: ${{ steps.ios-checkrun.outputs.checkrun_id }}
      android_checkrun_id: ${{ steps.android-checkrun.outputs.checkrun_id }}
    steps:
      - name: Create iOS Check Run
        id: ios-checkrun
        uses: actions/github-script@v6
        with:
          script: |
            const iosChanges = '${{ needs.check_platform_changes.outputs.ios_changes }}' === 'true';
            const checkRun = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Wait for IOS Build',
              head_sha: context.payload.pull_request.head.sha,
              status: iosChanges ? 'queued' : 'completed',
              started_at: new Date().toISOString(),
              check_suite: {
                workflow_id: context.workflow,
                name: 'Project Build'
              },
              ...(iosChanges ? {} : { completed_at: new Date().toISOString(), conclusion: 'success' }),
              output: {
                title: iosChanges ? 'Requesting an IOS Build' : 'No iOS Changes Detected',
                summary: iosChanges ? 'Requesting a new IOS build.' : 'No native iOS changes were detected in this PR'
              }
            });
            core.setOutput('checkrun_id', checkRun.data.id);

      - name: Create Android Check Run
        id: android-checkrun
        uses: actions/github-script@v6
        with:
          script: |
            const androidChanges = '${{ needs.check_platform_changes.outputs.android_changes }}' === 'true';
            const checkRun = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Wait for ANDROID Build',
              head_sha: context.payload.pull_request.head.sha,
              status: androidChanges ? 'queued' : 'completed',
              started_at: new Date().toISOString(),
              check_suite: {
                workflow_id: context.workflow,
                name: 'Project Build'
              },
              ...(androidChanges ? {} : { completed_at: new Date().toISOString(), conclusion: 'success' }),
              output: {
                title: androidChanges ? 'Requesting an ANDROID Build' : 'No Android Changes Detected',
                summary: androidChanges ? 'Requesting a new ANDROID build.' : 'No native Android changes were detected in this PR'
              }
            });
            core.setOutput('checkrun_id', checkRun.data.id);

  eas_build:
    needs: [create_build_checkruns, check_platform_changes]
    if: |
      github.actor != 'roswaaltifbot' && 
      !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') &&
      (needs.check_platform_changes.outputs.ios_changes == 'true' || needs.check_platform_changes.outputs.android_changes == 'true')
    name: Request EAS Builds
    runs-on: ubuntu-latest
    env:
      EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
      EXPO_PROJECT_OWNER: ${{ secrets.EXPO_PROJECT_OWNER }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js and Cache
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Setup Base Environment
        run: |
          {
            echo "GITHUB_SHA=${{ github.event.pull_request.head.sha }}"
            echo "GITHUB_BRANCH=${{ github.event.pull_request.head.ref }}"
            echo "GITHUB_REPOSITORY=${{ github.repository }}"
            echo "RUN_EAS_BUILD_HOOKS=1"
            echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}"
            echo "EXPO_PROJECT_OWNER=${{ secrets.EXPO_PROJECT_OWNER }}"
            echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}"
          } >> .env.infra

      - name: Request iOS Build
        if: needs.check_platform_changes.outputs.ios_changes == 'true'
        run: |
          {
            echo "PLATFORM=IOS"
            echo "CHECK_RUN_ID=${{ needs.create_build_checkruns.outputs.ios_checkrun_id }}"
          } >> .env.infra
          npm run eas_build_ci_ios
        env:
          EXPO_ACCESS_TOKEN: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Request Android Build
        if: needs.check_platform_changes.outputs.android_changes == 'true'
        run: |
          {
            echo "PLATFORM=ANDROID"
            echo "CHECK_RUN_ID=${{ needs.create_build_checkruns.outputs.android_checkrun_id }}"
          } >> .env.infra
          npm run eas_build_ci_android
        env:
          EXPO_ACCESS_TOKEN: ${{ secrets.EXPO_ACCESS_TOKEN }}