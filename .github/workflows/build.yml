name: Project Setup

env:
  TEST_RUNNER_CI: 1
  NODE_VERSION: "20.0.0"

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_native_changes:
    runs-on: ubuntu-latest
    outputs:
      native_changes: ${{ steps.check-files.outputs.native_changes }}
    steps:
      - name: Check out the PR branch
        uses: actions/checkout@v3
        with:
          # We need more than the default single commit so we can diff properly.
          # 'fetch-depth: 0' fetches all history, but can be replaced with '0' or '1' as needed.
          fetch-depth: 0

      - name: Fetch base branch
        run: |
          # This will fetch only the base branch at shallow depth 1 to do a diff
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Check for native file changes
        id: check-files
        run: |
          # Compare the base branch (FETCH_HEAD) to the current HEAD of the PR
          git diff --name-only FETCH_HEAD HEAD > changed_files.txt

          echo "Changed files:"
          cat changed_files.txt
          
          # Adjust patterns if you have more or fewer native directories
          if grep -q -E "android/|ios/|expo-plugins/|app.json|eas.json" changed_files.txt; then
            echo "native_changes=true" >> $GITHUB_OUTPUT
            echo "Native files were changed"
          else
            echo "native_changes=false" >> $GITHUB_OUTPUT
            echo "No native files were changed"
          fi

  setup_and_lint:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi
        env:
          TIFSHARED_JS: true

      - name: Lint
        run: npm run staged-lint

  unit_tests:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: setup_and_lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Add Env
        run: echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Run tests
        run: npm run test:ci

  build:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Bundle project
        run: npx expo export --platform ios --platform android

  wait-for-review:
    needs: [check_native_changes]
    runs-on: ubuntu-latest
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') && needs.check_native_changes.outputs.native_changes == 'true'
    environment:
      name: eas-build
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Waiting for review
        run: echo "Waiting for environment review"

  eas-build:
    needs: [build, wait-for-review, check_native_changes]
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') && needs.check_native_changes.outputs.native_changes == 'true'
    name: Request EAS Build
    runs-on: ubuntu-latest
    env:
      EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
      EXPO_PROJECT_OWNER: ${{ secrets.EXPO_PROJECT_OWNER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Construct .env
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> .env.infra
          echo "CHECK_RUN_ID=${{ github.run_id }}" >> .env.infra
          echo "GITHUB_SHA=${{ github.event.pull_request.head.sha }}" >> .env.infra
          echo "GITHUB_BRANCH=${{ github.event.pull_request.head.ref }}" >> .env.infra
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> .env.infra
          echo "RUN_EAS_BUILD_HOOKS=1" >> .env.infra
          echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}" >> .env.infra
          echo "EXPO_PROJECT_OWNER=${{ secrets.EXPO_PROJECT_OWNER }}" >> .env.infra
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "MIXPANEL_TOKEN=${{ secrets.MIXPANEL_TOKEN }}" >> .env
          echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Add ios platform to .env
        run: |
          echo "PLATFORM=IOS" >> .env.infra

      - name: Trigger iOS Build on EAS
        run: npm run eas_build_ci_ios
        env:
          EXPO_ACCESS_TOKEN: ${{ secrets.EXPO_ACCESS_TOKEN }}
      
      - name: Add android platform to .env
        run: |
          echo "PLATFORM=ANDROID" >> .env.infra
          
      - name: Trigger Android Build on EAS
        run: npm run eas_build_ci_android
        env:
          EXPO_ACCESS_TOKEN: ${{ secrets.EXPO_ACCESS_TOKEN }}

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [check_native_changes, build, eas-build]
    if: always()
    steps:
      - name: Check overall build status
        env:
          NATIVE_CHANGES: ${{ needs.check_native_changes.outputs.native_changes }}
        run: |
          echo "NATIVE_CHANGES = $NATIVE_CHANGES"
          
          # Always require the normal build to be successful.
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "Regular build failed."
            exit 1
          fi
          
          # If native changes, also require EAS build success.
          if [ "$NATIVE_CHANGES" == "true" ]; then
            echo "Native changes detected. Checking EAS build..."
            if [ "${{ needs.eas-build.result }}" != "success" ]; then
              echo "EAS build required but not successful."
              exit 1
            fi
            echo "EAS build succeeded."
          else
            echo "No native changes, skipping EAS build requirement."
          fi

